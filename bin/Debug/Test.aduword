<?xml version="1.0"?>
<Project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<Info>The function creates a string of words (#define) separated by one character per word (delimiter). The positions of the words are defined in a list per word. </Info>
	<ProjectName>GetWord</ProjectName>
	<WordList>
		<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
			<xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="WordList" msdata:UseCurrentLocale="true">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element name="WordList">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="No" type="xs:string" minOccurs="0" />
									<xs:element name="Word" type="xs:string" minOccurs="0" />
									<xs:element name="Word_Pos" type="xs:string" minOccurs="0" />
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:choice>
				</xs:complexType>
			</xs:element>
		</xs:schema>
		<diffgr:diffgram xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:diffgr="urn:schemas-microsoft-com:xml-diffgram-v1">
			<DocumentElement>
				<WordList diffgr:id="WordList1" msdata:rowOrder="0" diffgr:hasChanges="inserted">
					<No>1</No>
					<Word>Word_Version</Word>
					<Word_Pos>Ver.001</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList2" msdata:rowOrder="1" diffgr:hasChanges="inserted">
					<No>2</No>
					<Word>Word_OK</Word>
					<Word_Pos> OK</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList3" msdata:rowOrder="2" diffgr:hasChanges="inserted">
					<No>3</No>
					<Word>Word_to</Word>
					<Word_Pos> to-&gt;</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList4" msdata:rowOrder="3" diffgr:hasChanges="inserted">
					<No>4</No>
					<Word>Word_off</Word>
					<Word_Pos>off</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList5" msdata:rowOrder="4" diffgr:hasChanges="inserted">
					<No>5</No>
					<Word>Word_on</Word>
					<Word_Pos>on</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList6" msdata:rowOrder="5" diffgr:hasChanges="inserted">
					<No>6</No>
					<Word>Word_auto</Word>
					<Word_Pos>auto</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList7" msdata:rowOrder="6" diffgr:hasChanges="inserted">
					<No>7</No>
					<Word>Word_Error</Word>
					<Word_Pos>Error</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList8" msdata:rowOrder="7" diffgr:hasChanges="inserted">
					<No>8</No>
					<Word>Word_offline</Word>
					<Word_Pos>offline</Word_Pos>
				</WordList>
				<WordList diffgr:id="WordList9" msdata:rowOrder="8" diffgr:hasChanges="inserted">
					<No>9</No>
					<Word>Word_Temp</Word>
					<Word_Pos>Temp</Word_Pos>
				</WordList>
			</DocumentElement>
		</diffgr:diffgram>
	</WordList>
	<CodeText>
#include &lt;Arduino.h&gt;
//GetWord
/*The function creates a string of words (#define) separated by one character per word (delimiter). The positions of the words are defined in a list per word. */
#define Word_Version           0
#define Word_OK                8
#define Word_to                11
#define Word_off               16
#define Word_on                20
#define Word_auto              23
#define Word_Error             28
#define Word_offline           34
#define Word_Temp              42

const char TextBuffer [] =
"Ver.001/OK/to-&gt;/off/on/auto/Error/offline/Temp/";


//The function returns a defined word.
//The words were created by the CPP Arduino String Builder tool.
char* GetWord(uint8_t wordNo, bool print = false, char prefix = ' ', char suffix = 0)
{
uint8_t pos = 0;
if (prefix != 0) {DisplayBuffer[pos] = prefix; pos = 1;}                //set the prefix char
while (TextBuffer[wordNo] !='/')                                        //until the next delimiter char comes
{
DisplayBuffer[pos] = TextBuffer[wordNo];
pos ++;
wordNo++;
}
DisplayBuffer[pos] = 0;
if (prefix != 0){DisplayBuffer[pos] = suffix; DisplayBuffer[pos+1] = 0;} //set the suffix char
if (print) Serial.print(DisplayBuffer);
return DisplayBuffer;
}

	</CodeText>
	<Delimiter>/</Delimiter>
	<SaveToPath>GetWord.cpp</SaveToPath>
	<BeginDefine>//beginDefine</BeginDefine>
	<EndDefine>//endDefine</EndDefine>
	<BeginInsert>//beginInsert</BeginInsert>
	<EndInsert>//endInsert</EndInsert>
	<FunctionCode>
//The function returns a defined word.
//The words were created by the CPP Arduino String Builder tool.
char* GetWord(uint8_t wordNo, bool print = false, char prefix = ' ', char suffix = 0)
{
uint8_t pos = 0;
if (prefix != 0) {DisplayBuffer[pos] = prefix; pos = 1;}                //set the prefix char
while (TextBuffer[wordNo] !='/')                                        //until the next delimiter char comes
{
DisplayBuffer[pos] = TextBuffer[wordNo];
pos ++;
wordNo++;
}
DisplayBuffer[pos] = 0;
if (prefix != 0){DisplayBuffer[pos] = suffix; DisplayBuffer[pos+1] = 0;} //set the suffix char
if (print) Serial.print(DisplayBuffer);
return DisplayBuffer;
}
	</FunctionCode>
</Project>